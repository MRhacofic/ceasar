#include <iostream>
using namespace std;

//This function receives text and shift and
//returns the encrypted text

string encrypt(string text, int s) {
	
	string result = "";

	//continue the counter until the text lengts finish
	for (int i = 0; i < text.length(); i++) {
		
		if(isupper(text[i])) { //0 tabanında olması için en küçük upper Ascii sayısına ilerleme miktarını ekleyip çıkarıyoruz
			result += char(int(text[i] + s - 65) % 26 + 65);
			//int(text[i] + s - 65) == kaydırma sonrası yeni karakterin ascii'si (0 tabanından)
			// +65 bunu gerçek ascii değerine dönüştürür
			// %26 ise 0 tabanındaki ascii'nin en son karakter olan Z = 90 ve A = 65 arasındaki 26 karakterin arasında dolaştırmak
			//buradaki char ascii'yi karaktere dönüştürür
		}
		else{
			result += char(int(text[i] + s - 97) % 26 + 97);
		}
	}
	return result;
}

string decrypte(string cryptext, int s) {

	string result = "";

	for (int i = 0; i < cryptext.length(); i++) {
		
		if (isupper(cryptext[i])) {                  //negatif çıkanı + yapmak için ör = (65 - 4 - 65) = -4 + 26 = 22 olacak 22'de aslında birnevi 4'tür çünkü geriye doğru 4 gitmek ileri doğru 22 gitmektir
			result += char((int(cryptext[i] - s - 65) +26) % 26 + 65);
			//result += char(int(cryptext[i] - s - 65) % 26 + 65); //-4'ün modu olmaz
		}
		else {
			result += char((int(cryptext[i] - s - 97) +26)% 26 + 97);
		}
	}
	return result;
}

int main() {
	
	string text = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
	int s = 4;
	cout << "Text: " << text << endl;
	cout << "Shift: " << s << endl;
	string cryptext = encrypt(text, s);
	cout << "Cipher: " << cryptext;

	cout << "\nDeCrypte: " << decrypte(cryptext, s);
}
